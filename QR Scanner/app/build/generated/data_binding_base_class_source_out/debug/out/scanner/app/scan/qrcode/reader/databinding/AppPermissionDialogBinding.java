// Generated by view binder compiler. Do not edit!
package scanner.app.scan.qrcode.reader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import scanner.app.scan.qrcode.reader.R;

public final class AppPermissionDialogBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView appPermission;

  @NonNull
  public final TextView got;

  @NonNull
  public final LinearLayout linear;

  @NonNull
  public final TextView txt1;

  @NonNull
  public final TextView txt10;

  @NonNull
  public final TextView txt11;

  @NonNull
  public final TextView txt12;

  @NonNull
  public final TextView txt13;

  @NonNull
  public final TextView txt14;

  @NonNull
  public final TextView txt2;

  @NonNull
  public final TextView txt3;

  @NonNull
  public final TextView txt4;

  @NonNull
  public final TextView txt5;

  @NonNull
  public final TextView txt6;

  @NonNull
  public final TextView txt7;

  @NonNull
  public final TextView txt8;

  @NonNull
  public final TextView txt9;

  private AppPermissionDialogBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView appPermission, @NonNull TextView got, @NonNull LinearLayout linear,
      @NonNull TextView txt1, @NonNull TextView txt10, @NonNull TextView txt11,
      @NonNull TextView txt12, @NonNull TextView txt13, @NonNull TextView txt14,
      @NonNull TextView txt2, @NonNull TextView txt3, @NonNull TextView txt4,
      @NonNull TextView txt5, @NonNull TextView txt6, @NonNull TextView txt7,
      @NonNull TextView txt8, @NonNull TextView txt9) {
    this.rootView = rootView;
    this.appPermission = appPermission;
    this.got = got;
    this.linear = linear;
    this.txt1 = txt1;
    this.txt10 = txt10;
    this.txt11 = txt11;
    this.txt12 = txt12;
    this.txt13 = txt13;
    this.txt14 = txt14;
    this.txt2 = txt2;
    this.txt3 = txt3;
    this.txt4 = txt4;
    this.txt5 = txt5;
    this.txt6 = txt6;
    this.txt7 = txt7;
    this.txt8 = txt8;
    this.txt9 = txt9;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppPermissionDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppPermissionDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_permission_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppPermissionDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_permission;
      TextView appPermission = rootView.findViewById(id);
      if (appPermission == null) {
        break missingId;
      }

      id = R.id.got;
      TextView got = rootView.findViewById(id);
      if (got == null) {
        break missingId;
      }

      id = R.id.linear;
      LinearLayout linear = rootView.findViewById(id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.txt1;
      TextView txt1 = rootView.findViewById(id);
      if (txt1 == null) {
        break missingId;
      }

      id = R.id.txt10;
      TextView txt10 = rootView.findViewById(id);
      if (txt10 == null) {
        break missingId;
      }

      id = R.id.txt11;
      TextView txt11 = rootView.findViewById(id);
      if (txt11 == null) {
        break missingId;
      }

      id = R.id.txt12;
      TextView txt12 = rootView.findViewById(id);
      if (txt12 == null) {
        break missingId;
      }

      id = R.id.txt13;
      TextView txt13 = rootView.findViewById(id);
      if (txt13 == null) {
        break missingId;
      }

      id = R.id.txt14;
      TextView txt14 = rootView.findViewById(id);
      if (txt14 == null) {
        break missingId;
      }

      id = R.id.txt2;
      TextView txt2 = rootView.findViewById(id);
      if (txt2 == null) {
        break missingId;
      }

      id = R.id.txt3;
      TextView txt3 = rootView.findViewById(id);
      if (txt3 == null) {
        break missingId;
      }

      id = R.id.txt4;
      TextView txt4 = rootView.findViewById(id);
      if (txt4 == null) {
        break missingId;
      }

      id = R.id.txt5;
      TextView txt5 = rootView.findViewById(id);
      if (txt5 == null) {
        break missingId;
      }

      id = R.id.txt6;
      TextView txt6 = rootView.findViewById(id);
      if (txt6 == null) {
        break missingId;
      }

      id = R.id.txt7;
      TextView txt7 = rootView.findViewById(id);
      if (txt7 == null) {
        break missingId;
      }

      id = R.id.txt8;
      TextView txt8 = rootView.findViewById(id);
      if (txt8 == null) {
        break missingId;
      }

      id = R.id.txt9;
      TextView txt9 = rootView.findViewById(id);
      if (txt9 == null) {
        break missingId;
      }

      return new AppPermissionDialogBinding((RelativeLayout) rootView, appPermission, got, linear,
          txt1, txt10, txt11, txt12, txt13, txt14, txt2, txt3, txt4, txt5, txt6, txt7, txt8, txt9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
