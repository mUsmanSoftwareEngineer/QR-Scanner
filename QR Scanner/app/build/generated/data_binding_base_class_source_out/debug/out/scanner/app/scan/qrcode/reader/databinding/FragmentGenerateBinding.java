// Generated by view binder compiler. Do not edit!
package scanner.app.scan.qrcode.reader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import scanner.app.scan.qrcode.reader.R;

public final class FragmentGenerateBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView barcode;

  @NonNull
  public final RecyclerView barcodeRecycler;

  @NonNull
  public final TextView createQR;

  @NonNull
  public final RecyclerView generateRecycler;

  @NonNull
  public final TextView generateText;

  private FragmentGenerateBinding(@NonNull RelativeLayout rootView, @NonNull TextView barcode,
      @NonNull RecyclerView barcodeRecycler, @NonNull TextView createQR,
      @NonNull RecyclerView generateRecycler, @NonNull TextView generateText) {
    this.rootView = rootView;
    this.barcode = barcode;
    this.barcodeRecycler = barcodeRecycler;
    this.createQR = createQR;
    this.generateRecycler = generateRecycler;
    this.generateText = generateText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGenerateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGenerateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_generate, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGenerateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barcode;
      TextView barcode = rootView.findViewById(id);
      if (barcode == null) {
        break missingId;
      }

      id = R.id.barcode_recycler;
      RecyclerView barcodeRecycler = rootView.findViewById(id);
      if (barcodeRecycler == null) {
        break missingId;
      }

      id = R.id.createQR;
      TextView createQR = rootView.findViewById(id);
      if (createQR == null) {
        break missingId;
      }

      id = R.id.generate_recycler;
      RecyclerView generateRecycler = rootView.findViewById(id);
      if (generateRecycler == null) {
        break missingId;
      }

      id = R.id.generate_text;
      TextView generateText = rootView.findViewById(id);
      if (generateText == null) {
        break missingId;
      }

      return new FragmentGenerateBinding((RelativeLayout) rootView, barcode, barcodeRecycler,
          createQR, generateRecycler, generateText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
