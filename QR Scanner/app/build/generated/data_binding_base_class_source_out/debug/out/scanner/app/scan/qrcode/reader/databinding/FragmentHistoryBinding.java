// Generated by view binder compiler. Do not edit!
package scanner.app.scan.qrcode.reader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import scanner.app.scan.qrcode.reader.R;

public final class FragmentHistoryBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout TopBtns;

  @NonNull
  public final TextView createdResBtn;

  @NonNull
  public final ImageButton deleteAll;

  @NonNull
  public final ImageView line;

  @NonNull
  public final TextView noResultView;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView scannedResBtn;

  private FragmentHistoryBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout TopBtns,
      @NonNull TextView createdResBtn, @NonNull ImageButton deleteAll, @NonNull ImageView line,
      @NonNull TextView noResultView, @NonNull RecyclerView recyclerView,
      @NonNull TextView scannedResBtn) {
    this.rootView = rootView;
    this.TopBtns = TopBtns;
    this.createdResBtn = createdResBtn;
    this.deleteAll = deleteAll;
    this.line = line;
    this.noResultView = noResultView;
    this.recyclerView = recyclerView;
    this.scannedResBtn = scannedResBtn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Top_btns;
      LinearLayout TopBtns = rootView.findViewById(id);
      if (TopBtns == null) {
        break missingId;
      }

      id = R.id.created_res_btn;
      TextView createdResBtn = rootView.findViewById(id);
      if (createdResBtn == null) {
        break missingId;
      }

      id = R.id.deleteAll;
      ImageButton deleteAll = rootView.findViewById(id);
      if (deleteAll == null) {
        break missingId;
      }

      id = R.id.line;
      ImageView line = rootView.findViewById(id);
      if (line == null) {
        break missingId;
      }

      id = R.id.noResultView;
      TextView noResultView = rootView.findViewById(id);
      if (noResultView == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = rootView.findViewById(id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.scanned_res_btn;
      TextView scannedResBtn = rootView.findViewById(id);
      if (scannedResBtn == null) {
        break missingId;
      }

      return new FragmentHistoryBinding((RelativeLayout) rootView, TopBtns, createdResBtn,
          deleteAll, line, noResultView, recyclerView, scannedResBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
